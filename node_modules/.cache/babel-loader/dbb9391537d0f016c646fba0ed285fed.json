{"ast":null,"code":"var _jsxFileName = \"/Users/tailes/Desktop/CSCI310/RedditClone/redditclone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n/*\nHere are the features it should have:\n\n• Display the number of votes\n• Functioning Upvote and Downvote controls\n• Display the number of comments\n• Sort the stories by number of upvotes\n• The title should be a real link\n• Other links do not need to be functional (share, save, hide, etc.)\n\n \n\nReddit’s API is public and you don’t need a key. You can use static data from e.g. http://www.reddit.com/r/reactjs.json\n\n\n*/\n//const baseUrl = \"https://www.reddit.com/r/reactjs/new\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \" http://www.reddit.com/r/reactjs.json\";\n\nfunction Voting() {}\n\n_c = Voting;\n\nfunction PostDisplay() {}\n\n_c2 = PostDisplay;\n\nfunction App() {\n  _s();\n\n  const [score, setScore] = useState(0);\n  const [post, setPost] = useState(null);\n  const [numPosts, setNumPosts] = useState(0);\n  const useEffect = (() => {\n    axios.get(baseUrl).then(response => {\n      setPost(response.data);\n      let temp = response;\n      console.log(temp);\n      console.log(response);\n    });\n  }, []);\n  axios.get(baseUrl).then(response => {\n    console.log(response.data.data.children);\n    setNumPosts(response.data.data.dist);\n    console.log(numPosts);\n  });\n\n  if (!post) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: numPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zQSydSqrs5c/+FqNHTaelNLRfS4=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Voting\");\n$RefreshReg$(_c2, \"PostDisplay\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/tailes/Desktop/CSCI310/RedditClone/redditclone/src/App.js"],"names":["React","useState","useEffect","axios","baseUrl","Voting","PostDisplay","App","score","setScore","post","setPost","numPosts","setNumPosts","get","then","response","data","temp","console","log","children","dist"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,MAAMC,OAAO,GAAG,uCAAhB;;AAEA,SAASC,MAAT,GAAkB,CAEjB;;KAFQA,M;;AAIT,SAASC,WAAT,GAAuB,CAEtB;;MAFQA,W;;AAIT,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AAEA,QAAMC,SAAS,IAAI,MAAM;AACvBC,IAAAA,KAAK,CAACW,GAAN,CAAUV,OAAV,EAAmBW,IAAnB,CAAyBC,QAAD,IAAc;AACpCL,MAAAA,OAAO,CAACK,QAAQ,CAACC,IAAV,CAAP;AACA,UAAIC,IAAI,GAAGF,QAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,KALD;AAMD,GAPkB,EAOhB,EAPY,CAAf;AASAb,EAAAA,KAAK,CAACW,GAAN,CAAUV,OAAV,EAAmBW,IAAnB,CAAyBC,QAAD,IAAc;AACpCG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBI,QAA/B;AACAR,IAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBK,IAApB,CAAX;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACD,GAJD;;AAKA,MAAI,CAACF,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA7BQL,G;;MAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n/*\nHere are the features it should have:\n\n• Display the number of votes\n• Functioning Upvote and Downvote controls\n• Display the number of comments\n• Sort the stories by number of upvotes\n• The title should be a real link\n• Other links do not need to be functional (share, save, hide, etc.)\n\n \n\nReddit’s API is public and you don’t need a key. You can use static data from e.g. http://www.reddit.com/r/reactjs.json\n\n\n*/\n\n//const baseUrl = \"https://www.reddit.com/r/reactjs/new\"\nconst baseUrl = \" http://www.reddit.com/r/reactjs.json\"\n\nfunction Voting() {\n\n}\n\nfunction PostDisplay() {\n\n}\n\nfunction App() {\n  const [score, setScore] = useState(0)\n  const [post, setPost] = useState(null)\n  const [numPosts, setNumPosts] = useState(0)\n\n  const useEffect = (() => {\n    axios.get(baseUrl).then((response) => {\n      setPost(response.data)\n      let temp = response\n      console.log(temp)\n      console.log(response)\n    })\n  }, [])\n\n  axios.get(baseUrl).then((response) => {\n    console.log(response.data.data.children)\n    setNumPosts(response.data.data.dist)\n    console.log(numPosts)\n  })\n  if (!post) {\n    return null\n  }\n\n  return (\n    <div>\n      <h1>{numPosts}</h1>\n      <p></p>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}