{"ast":null,"code":"var _jsxFileName = \"/Users/tailes/Desktop/CSCI310/RedditClone/redditclone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n/*\nHere are the features it should have:\n\n• Display the number of votes\n• Functioning Upvote and Downvote controls\n• Display the number of comments\n• Sort the stories by number of upvotes\n• The title should be a real link\n• Other links do not need to be functional (share, save, hide, etc.)\n\n \n\nReddit’s API is public and you don’t need a key. You can use static data from e.g. http://www.reddit.com/r/reactjs.json\n\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseUrl = \" http://www.reddit.com/r/reactjs.json\";\n\nfunction Voting() {}\n\n_c = Voting;\n\nfunction PostDisplay(post) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: post.data.data.url,\n        children: post.post.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c2 = PostDisplay;\n\nfunction App() {\n  _s();\n\n  const [score, setScore] = useState(0);\n  const [posts, setPosts] = useState();\n  const [numPosts, setNumPosts] = useState(0);\n  const tempPost = {\n    title: \"yo\"\n  }; //setPosts(tempPost)\n\n  const handleClick = () => {\n    axios.get(baseUrl).then(response => {\n      setPosts(response.data.data.children);\n      setNumPosts(response.data.data.dist);\n      console.log(posts);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Fetch Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), posts !== undefined ? posts.map(post => /*#__PURE__*/_jsxDEV(PostDisplay, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 51\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wKnX6ImdAlhWQaK5CbXsS5aDKhs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Voting\");\n$RefreshReg$(_c2, \"PostDisplay\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/tailes/Desktop/CSCI310/RedditClone/redditclone/src/App.js"],"names":["React","useState","useEffect","axios","baseUrl","Voting","PostDisplay","post","data","url","title","App","score","setScore","posts","setPosts","numPosts","setNumPosts","tempPost","handleClick","get","then","response","children","dist","console","log","undefined","map"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,OAAO,GAAG,uCAAhB;;AAEA,SAASC,MAAT,GAAkB,CAEjB;;KAFQA,M;;AAIT,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,sBACE;AAAA,2BACE;AAAA,6BACE;AAAG,QAAA,IAAI,EAAEA,IAAI,CAACC,IAAL,CAAUA,IAAV,CAAeC,GAAxB;AAAA,kBAA8BF,IAAI,CAACA,IAAL,CAAUC,IAAV,CAAeE;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;MARQJ,W;;AAUT,SAASK,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,CAAD,CAAxC;AAEA,QAAMiB,QAAQ,GAAG;AACfR,IAAAA,KAAK,EAAE;AADQ,GAAjB,CALa,CAQb;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACxBhB,IAAAA,KAAK,CAACiB,GAAN,CAAUhB,OAAV,EAAmBiB,IAAnB,CAAyBC,QAAD,IAAc;AACtCP,MAAAA,QAAQ,CAACO,QAAQ,CAACd,IAAT,CAAcA,IAAd,CAAmBe,QAApB,CAAR;AACAN,MAAAA,WAAW,CAACK,QAAQ,CAACd,IAAT,CAAcA,IAAd,CAAmBgB,IAApB,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACD,KAJC;AAKH,GANC;;AAQA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEK,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,KAAK,KAAIa,SAAT,GAAsBb,KAAK,CAACc,GAAN,CAAWrB,IAAD,iBAAW,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAArB,CAAtB,GAA4E,IAF/E;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxBQI,G;;MAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n/*\nHere are the features it should have:\n\n• Display the number of votes\n• Functioning Upvote and Downvote controls\n• Display the number of comments\n• Sort the stories by number of upvotes\n• The title should be a real link\n• Other links do not need to be functional (share, save, hide, etc.)\n\n \n\nReddit’s API is public and you don’t need a key. You can use static data from e.g. http://www.reddit.com/r/reactjs.json\n\n\n*/\n\nconst baseUrl = \" http://www.reddit.com/r/reactjs.json\"\n\nfunction Voting() {\n\n}\n\nfunction PostDisplay(post) {\n  return (\n    <>\n      <div>\n        <a href={post.data.data.url}>{post.post.data.title}</a>\n      </div>\n    </>\n  )\n}\n\nfunction App() {\n  const [score, setScore] = useState(0)\n  const [posts, setPosts] = useState()\n  const [numPosts, setNumPosts] = useState(0)\n\n  const tempPost = {\n    title: \"yo\"\n  }\n  //setPosts(tempPost)\n\n  const handleClick = () => {\n    axios.get(baseUrl).then((response) => {\n    setPosts(response.data.data.children)\n    setNumPosts(response.data.data.dist)\n    console.log(posts)\n  })\n}\n\n  return (\n    <div>\n      <button onClick={handleClick}>Fetch Posts</button>\n      {posts!== undefined ? (posts.map((post) => (<PostDisplay post={post}/>))) : (null)}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}